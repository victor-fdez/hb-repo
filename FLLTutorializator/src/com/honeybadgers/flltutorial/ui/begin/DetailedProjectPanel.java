/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.honeybadgers.flltutorial.ui.begin;

import com.honeybadgers.flltutorial.model.Tutorial;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 * Displays a detailed view of the new project, that can be edited.
 * 
 * @author chingaman
 */
public class DetailedProjectPanel extends javax.swing.JPanel {

    /**
     * Creates new form DetailedProjectPanel
     */
    private DefaultListModel membersListModel;
    private Tutorial tutorial;
    public DetailedProjectPanel(Tutorial tutorial) {
        initComponents();
        this.tutorial = tutorial;
        this.tutorialDescriptionTextArea.setText(tutorial.getMission());
        this.tutorialDescriptionTextArea.setLineWrap(true);
        this.tutorialDescriptionTextArea.setWrapStyleWord(true);
        this.tutorialNameLabel.setText(tutorial.getName());
        this.tutorialAuthorLabel.setText(tutorial.getAuthor());
        this.membersListModel = new DefaultListModel();
        //add all members
        for(String memberName : this.tutorial.getMembers())
        {
            this.membersListModel.addElement(memberName);
        }
        this.membersList.setModel(this.membersListModel);
        
        //add action listener to document of member name text field
        this.addTeamMember.setEnabled(false);
        this.memberNameTextField.getDocument().addDocumentListener(new  DocListener());
        
        this.membersList.addListSelectionListener(new ListListener());
        this.deleteMemberButton.setEnabled(false);
    }
    
    private class DocListener implements DocumentListener
    {

        @Override
        public void insertUpdate(DocumentEvent e) {
            memberNameTextFieldChanged();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            memberNameTextFieldChanged();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        }
        
    }
    
    private void memberNameTextFieldChanged()
    {
        if(!this.memberNameTextField.getText().isEmpty())
        {
            this.addTeamMember.setEnabled(true);
            return;
        }
        this.addTeamMember.setEnabled(false);
    }
    
    private class ListListener implements ListSelectionListener
    {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            ListSelectionModel lsm = ((JList)e.getSource()).getSelectionModel();

            if (lsm.isSelectionEmpty()) {
                deleteMemberButton.setEnabled(false);
            } else {
                // Find out which indexes are selected.
                deleteMemberButton.setEnabled(true);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        title = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        teamNameTextField = new javax.swing.JTextField();
        separator = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        memberNameTextField = new javax.swing.JTextField();
        addTeamMember = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        membersList = new javax.swing.JList();
        deleteMemberButton = new javax.swing.JButton();
        saveProjectButton = new javax.swing.JButton();
        separatorBelow = new javax.swing.JSeparator();
        tutorialNameLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tutorialDescriptionTextArea = new javax.swing.JTextArea();
        tutorialAuthorLabel = new javax.swing.JLabel();
        membersUserMsg = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();

        jTextField3.setText("jTextField3");

        title.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        title.setText("Project Information");

        jLabel2.setText("project name");

        jLabel3.setText("team name");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel1.setText("Team Members Information");

        jLabel4.setText("member name");

        addTeamMember.setText("add member");
        addTeamMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeamMemberActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(membersList);

        deleteMemberButton.setText("delete selected member");
        deleteMemberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMemberButtonActionPerformed(evt);
            }
        });

        saveProjectButton.setText("save project information");

        tutorialNameLabel.setText("tutorialName");

        tutorialDescriptionTextArea.setEditable(false);
        tutorialDescriptionTextArea.setColumns(20);
        tutorialDescriptionTextArea.setRows(5);
        tutorialDescriptionTextArea.setDragEnabled(false);
        tutorialDescriptionTextArea.setFocusable(false);
        jScrollPane2.setViewportView(tutorialDescriptionTextArea);

        tutorialAuthorLabel.setText("by author");

        membersUserMsg.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        membersUserMsg.setText("add at least a team member");

        cancelButton.setText("cancel");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(separator)
                    .add(separatorBelow)
                    .add(layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(46, 46, 46)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(jLabel2)
                                                    .add(jLabel3)
                                                    .add(jLabel4))
                                                .add(18, 18, 18)
                                                .add(memberNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 312, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                                .add(layout.createSequentialGroup()
                                                    .add(tutorialNameLabel)
                                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .add(tutorialAuthorLabel))
                                                .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane2))))
                                    .add(layout.createSequentialGroup()
                                        .add(46, 46, 46)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(layout.createSequentialGroup()
                                                .add(saveProjectButton)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(cancelButton)
                                                .add(0, 0, Short.MAX_VALUE))
                                            .add(jScrollPane1)))
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                                        .add(153, 153, 153)
                                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, nameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, teamNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(0, 0, Short.MAX_VALUE))
                                    .add(membersUserMsg, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                        .add(deleteMemberButton)
                                        .add(addTeamMember)))
                                .add(52, 52, 52))
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(title)
                                    .add(jLabel1))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 394, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(title)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(tutorialNameLabel)
                    .add(tutorialAuthorLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(nameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(teamNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(separator, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel1)
                .add(5, 5, 5)
                .add(membersUserMsg)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(memberNameTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(addTeamMember)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(deleteMemberButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(separatorBelow, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(saveProjectButton)
                    .add(cancelButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addTeamMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeamMemberActionPerformed
        String memberName = this.memberNameTextField.getText();
        if(!memberName.isEmpty())
        {
            int size = this.membersListModel.getSize();
            
            //clear up the field
            this.memberNameTextField.setText("");
            this.memberNameTextField.requestFocusInWindow();
            
            //add new member to the list
            this.membersListModel.addElement(memberName);
            
            //set visibility within the list
            this.membersList.setSelectedIndex(size);
            this.membersList.ensureIndexIsVisible(size);
        }
    }//GEN-LAST:event_addTeamMemberActionPerformed

    private void deleteMemberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMemberButtonActionPerformed
        ListSelectionModel selectionsModel = this.membersList.getSelectionModel();
        int minIndex = -1;
        while((minIndex = selectionsModel.getMinSelectionIndex()) != -1)
        {
            if(selectionsModel.isSelectedIndex(minIndex))
            {
                this.membersListModel.remove(minIndex);
            }
        }
    }//GEN-LAST:event_deleteMemberButtonActionPerformed

    public boolean checkSaveIsCorrect(JFrame frame)
    {
        boolean anyWrong = false;
        String wrongMessage = "";
       
        
        if(this.nameTextField.getText().isEmpty())
        {
            wrongMessage += "Need to fill in a project name\n";
            anyWrong = true;
        }
        
        if(this.teamNameTextField.getText().isEmpty())
        {
            wrongMessage += "Need to fill in a team name\n";
            anyWrong = true;
        }
        
        if(this.membersListModel.isEmpty())
        {
            wrongMessage += "Need to add at least a team member\n";
            anyWrong = true;
        }
        
        if(anyWrong) //if something is wrong
        {
            JOptionPane.showMessageDialog(frame, wrongMessage, "incorrectly filled project form", JOptionPane.ERROR_MESSAGE);
        }
        else //if nothing is wrong
        {
            
        }
        
        return !anyWrong;
    }

    public Tutorial getTutorial() {
        //update tutorial information before it is gotten
        this.tutorial.setProjectName(this.nameTextField.getText());
        this.tutorial.setTeamName(this.teamNameTextField.getText());
        
        //get all members
        Object[] objectArray = this.membersListModel.toArray();
        String[] memberStrings = Arrays.copyOf(objectArray, objectArray.length, String[].class);
        List<String> members = Arrays.asList(memberStrings);

        this.tutorial.setMembers(members);
        
        return this.tutorial;
    }
    
    public JButton getSaveProjectButton() {
        return saveProjectButton;
    }

    public JButton getCancelButton() {
        return cancelButton;
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTeamMember;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteMemberButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField memberNameTextField;
    private javax.swing.JList membersList;
    private javax.swing.JLabel membersUserMsg;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton saveProjectButton;
    private javax.swing.JSeparator separator;
    private javax.swing.JSeparator separatorBelow;
    private javax.swing.JTextField teamNameTextField;
    private javax.swing.JLabel title;
    private javax.swing.JLabel tutorialAuthorLabel;
    private javax.swing.JTextArea tutorialDescriptionTextArea;
    private javax.swing.JLabel tutorialNameLabel;
    // End of variables declaration//GEN-END:variables
}
